{"version":3,"sources":["components/NavBarItems/NavBarItems.tsx","components/NavBar/NavBar.tsx","App.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api/Tabs.ts","components/TabItem/TabItem.tsx","components/TabsPage/TabsPage.tsx","index.tsx"],"names":["NavBarItems","memo","to","title","className","isActive","NavBar","App","HomePage","NotFoundPage","tabs","id","content","TabItem","tab","tabId","useParams","classNames","TabsPage","selectedTab","useMemo","find","map","ReactDOM","render","path","element","index","replace","document","getElementById"],"mappings":"uPASaA,EAA+BC,gBAC1C,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBD,IAC3B,cACA,CAAE,YAAaC,KAJnB,SAOGF,OCfMG,EAAmBL,gBAAK,kBACnC,qBACEG,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAACJ,EAAD,CAAaE,GAAG,IAAIC,MAAM,SAC1B,cAACH,EAAD,CAAaE,GAAG,QAAQC,MAAM,mBCLzBI,EAAM,kBACjB,qCAEE,cAACD,EAAD,IAEA,cAAC,IAAD,QCTSE,EAAqBP,gBAAK,kBACrC,oBAAIG,UAAU,QAAd,0BCDWK,EAAyBR,gBAAK,kBACzC,oBAAIG,UAAU,QAAd,+BCDWM,EAAc,CACzB,CAAEC,GAAI,QAASR,MAAO,QAASS,QAAS,eACxC,CAAED,GAAI,QAASR,MAAO,QAASS,QAAS,eACxC,CAAED,GAAI,QAASR,MAAO,QAASS,QAAS,gBCI7BC,EAA2BZ,gBAAK,YAEtC,IADLa,EACI,EADJA,IAEQC,EAAUC,cAAVD,MAER,OACE,oBAEEX,UAAWa,IACT,CAAE,YAAaH,EAAIH,KAAOI,IAE5B,UAAQ,MALV,SAOE,cAAC,IAAD,CACEb,GAAE,aAAQY,EAAIH,IACd,UAAQ,UAFV,SAIGG,EAAIX,SAVFW,EAAIH,OCXFO,EAAqBjB,gBAAK,WACrC,IAAQc,EAAUC,cAAVD,MACFI,EAAcC,mBAAQ,kBAAMV,EAAKW,MACrC,SAAAP,GAAG,OAAIA,EAAIH,KAAOI,OACjB,CAACL,EAAMK,IAEV,OACE,qBAAKX,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGM,EAAKY,KAAI,SAAAR,GAAG,OACX,cAACD,EAAD,CAASC,IAAKA,GAAUA,EAAIH,WAKlC,qBAAKP,UAAU,QAAQ,UAAQ,aAA/B,SACIe,EAIEA,EAAYP,QAFZ,gCCfdW,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAClB,EAAD,MAEtB,eAAC,IAAD,CAAOiB,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAACR,EAAD,MACtB,cAAC,IAAD,CAAOO,KAAK,SAASC,QAAS,cAACR,EAAD,SAGhC,cAAC,IAAD,CAAOO,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUxB,GAAG,IAAI0B,SAAO,MACrD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAACjB,EAAD,aAI/BoB,SAASC,eAAe,W","file":"static/js/main.487699b7.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport className from 'classnames';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const NavBarItems: React.FC<Props> = memo(\n  ({ to, title }) => (\n    <NavLink\n      to={to}\n      className={({ isActive }) => className(\n        'navbar-item',\n        { 'is-active': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  ),\n);\n","import React, { memo } from 'react';\nimport { NavBarItems } from '../NavBarItems/NavBarItems';\n\nexport const NavBar: React.FC = memo(() => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavBarItems to=\"/\" title=\"Home\" />\n        <NavBarItems to=\"/tabs\" title=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n));\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <NavBar />\n\n    <Outlet />\n  </>\n);\n","import React, { memo } from 'react';\n\nexport const HomePage: React.FC = memo(() => (\n  <h1 className=\"title\">Home page</h1>\n));\n","import React, { memo } from 'react';\n\nexport const NotFoundPage: React.FC = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { Tab } from '../types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab,\n};\n\nexport const TabItem: React.FC<Props> = memo(({\n  tab,\n}) => {\n  const { tabId } = useParams();\n\n  return (\n    <li\n      key={tab.id}\n      className={classNames(\n        { 'is-active': tab.id === tabId },\n      )}\n      data-cy=\"Tab\"\n    >\n      <Link\n        to={`../${tab.id}`}\n        data-cy=\"TabLink\"\n      >\n        {tab.title}\n      </Link>\n    </li>\n  );\n});\n","import React, { memo, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { tabs } from '../../api/Tabs';\nimport { TabItem } from '../TabItem/TabItem';\n\nexport const TabsPage: React.FC = memo(() => {\n  const { tabId } = useParams();\n  const selectedTab = useMemo(() => tabs.find(\n    tab => tab.id === tabId,\n  ), [tabs, tabId]);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Tabs page</h1>\n\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <TabItem tab={tab} key={tab.id} />\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {!selectedTab\n            ? (\n              'Please select a tab'\n            )\n            : selectedTab.content}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { TabsPage } from './components/TabsPage/TabsPage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"/tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}